import type { Metadata } from "next";
import { Poppins } from "next/font/google";
import Script from "next/script";
import "./globals.css";

// Extend window type to avoid TS error
declare global {
  interface Window {
    initializeChatbot?: (botId: string) => void;
  }
}

const poppins = Poppins({
  variable: "--font-poppins",
  subsets: ["latin"],
  weight: ["300", "400", "500", "600", "700"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const BOT_ID = "6847eb146584ec5f07dd2b04";

  return (
    <html lang="en" className={poppins.variable}>
      <head />
      <body>
        {children}

        {/* Load marked.js if needed */}
        <Script
          src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"
          strategy="afterInteractive"
        />

        {/* Load chatbot script and initialize after load */}
        <Script
          src="https://c20.live/script/chatbot-embed.js"
          strategy="afterInteractive"
          onLoad={() => {
            if (typeof window !== "undefined") {
              const initialize = () => {
                if (window.initializeChatbot) {
                  window.initializeChatbot(BOT_ID);
                  return true;
                }
                return false;
              };

              if (!initialize()) {
                const interval = setInterval(() => {
                  if (initialize()) clearInterval(interval);
                }, 100);
                setTimeout(() => clearInterval(interval), 10000);
              }
            }
          }}
        />
      </body>
    </html>
  );
}

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Script from "next/script";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        {/* Tailwind via CDN */}
        <Script
          src="https://cdn.tailwindcss.com"
          strategy="beforeInteractive"
        />

        {/* Chatbot script */}
        <Script
          src="https://c20.live/script/chatbot-embed.js"
          strategy="beforeInteractive"
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}

        {/* Chatbot Initialization */}
        <Script
          id="chatbot-init"
          strategy="afterInteractive"
          dangerouslySetInnerHTML={{
            __html: `
              window.addEventListener('load', function () {
                console.log("[Chatbot] Waiting for initializeChatbot...");
                const chatbotId = "6813cec9f49af4c76d05b234";
                let tries = 0;
                const maxTries = 50;

                const interval = setInterval(() => {
                  tries++;
                  if (typeof window.initializeChatbot === "function") {
                    console.log("[Chatbot] Initializing...");
                    window.initializeChatbot(chatbotId);
                    clearInterval(interval);
                  } else if (tries >= maxTries) {
                    console.warn("[Chatbot] Initialization timed out.");
                    clearInterval(interval);
                  }
                }, 200);
              });
            `,
          }}
        />
      </body>
    </html>
  );
}
